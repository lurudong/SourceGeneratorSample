using Microsoft.CodeAnalysis;
using SourceGenerator;
using SourceGeneratorSample.Core;

namespace SourceGeneratorSample.IncrementalGenerator;

[Generator(LanguageNames.CSharp)]
public sealed class GreetingGenerator : IIncrementalGenerator
{
    /// <inheritdoc>
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        context.RegisterPostInitializationOutput(static context =>
        {
            context.AddSource($"GreetingUseIncremental{SourceGeneratorFileNameShortcut.GreetingGenerator_UseIncrementalGenerator}", $@"

// <auto-generated/>  
#nullable enable
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{nameof(GreetingGenerator)}"",""{SourceGeneratorVersion.Value}"")]
// <inheritodc/> 
 public static class  GreetingUseIncremental
{{

[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{nameof(GreetingGenerator)}"",""{SourceGeneratorVersion.Value}"")]
    public static  void SayHelloTo(string name)
    {{
          global::System.Console.WriteLine($""GreetingGenerator_UseIncrementalGenerator: '{{name}}'"");
    }}
}}
");
        });
    }
}