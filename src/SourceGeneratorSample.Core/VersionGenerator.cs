using Microsoft.CodeAnalysis;
using System.Linq;
using System.Xml;

namespace SourceGeneratorSample.Core;

/// <summary>
/// 一个源代码生成器的项目，这个项目专门读取根项目下的 Directory.Build.props
/// 根据配置的Version标签的数值，产生一个常量字段 Version ，将结果自动写入到该字段里面。
/// 这样的方式到达自动更新的目的。
/// </summary>
[Generator(LanguageNames.CSharp)]
public sealed class VersionGenerator : ISourceGenerator
{
    /// <inheritdoc/>
    public void Execute(GeneratorExecutionContext context)
    {
        var additionalFiles = context.AdditionalFiles;

        var path = additionalFiles.
            FirstOrDefault(static x =>
            x.Path is var path &&
            x.Path.IndexOf("Directory.Build.props") is var index
            and not -1 && index - 1 >= 0 && path[index - 1] == '\\')?.Path;

        if (path is null)
        {
            return;
        }

        var version = new XmlDocument().LoadFile(path!)
           .SelectNodes("descendant::PropertyGroup")
           .Cast<XmlNode>()
           .First()
           .ChildNodes
           .Cast<XmlNode>()
           .Where(static n => n.Name == "Version")
           .Select(static n => n.InnerText)
           .First();

        var source = $@"
// <auto-generated/>  
#nullable enable
namespace SourceGenerator;
[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
[global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{nameof(VersionGenerator)}"",global::SourceGenerator.SourceGeneratorVersion.Value)]
internal static class SourceGeneratorVersion
{{

    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute(""{nameof(VersionGenerator)}"",global::SourceGenerator.SourceGeneratorVersion.Value)]
    public const string Value = ""{version}"";
}}";
        context.AddSource($"SourceGeneratorVersion{SourceGeneratorFileNameShortcut.VersionGenerator}", source
            );
    }

    /// <inheritdoc/>
    public void Initialize(GeneratorInitializationContext context)
    {


    }
}

file static class XmlDocumentExt
{
    public static XmlDocument LoadFile(this XmlDocument document, string path)
    {
        document.Load(path);
        return document;
    }
}
